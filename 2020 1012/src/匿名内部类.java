/*
* 如果接口实现类（或者是父类的子类）只需使用唯一一次，
* 那么这种情况下就可以省略该类的定义，而改为使用匿名内部类
* 匿名内部类的定义格式
* 接口名称 对象名 = new 对象名
* {
* 覆盖重写所以抽象方法
* }
*
对格式“new 接口名称() {...}”进行解析：
1. new代表创建对象的动作
2. 接口名称就是匿名内部类需要实现哪个接口
3. {...}这才是匿名内部类的内容

另外还要注意几点问题：
1. 匿名内部类，在【创建对象】的时候，只能使用唯一一次。
如果希望多次创建对象，而且类的内容一样的话，那么就需要使用单独定义的实现类了。
2. 匿名对象，在【调用方法】的时候，只能调用唯一一次。
如果希望同一个对象，调用多次方法，那么必须给对象起个名字。
3. 匿名内部类是省略了【实现类/子类名称】，但是匿名对象是省略了【对象名称】
强调：匿名内部类和匿名对象不是一回事！！！
 */



public class 匿名内部类 {
    public static void main(String[] args) {
//        创建接口以后要通过实现类来实现接口 调用 = new 创建接口以后要通过实现类来实现接口();
//        //创建实用类来调用接口
//        调用.method();

        //上面这样调用要多创建一个实现类 使用匿名可以直接使用

//        匿名内部类
        Mylnterface lei = new Mylnterface() { //回车就可以直接覆盖重写
            @Override
            public void method() {
                System.out.println("匿名内部类实现方法");


            }

        };
        lei.method();


    }
}